<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd">

    <!-- Scans the classpath of this application for @Components to deploy as beans -->
    <context:component-scan base-package="com.sm.*"></context:component-scan>

    <!-- Configures the @Controller programming model -->
    <mvc:annotation-driven/>

    <!-- Handles HTTP GET requests for /resources/** by efficiently serving up static resources in the ${webappRoot}/resources/ directory -->
    <mvc:resources mapping="/resources/**" location="/resources/"/>

    <!-- Application Message Bundle
    <bean id="messageSource" class="org.springframework.context.support.ReloadableResourceBundleMessageSource">
        <property name="basename" value="/WEB-INF/messages/messages" />
        <property name="cacheSeconds" value="0" />
        <property name="basenames">
            <list>
                <value>/WEB-INF/messages/messages</value>
                <value>/WEB-INF/messages/exceptions</value>
            </list>
        </property>
    </bean>
    -->

    <!-- Configures Handler Interceptors -->
    <!--<mvc:interceptors>-->
        <!-- <bean class="swswsws.auth.interceptor.AuthInterceptor" /> -->

        <!-- Changes the locale when a 'locale' request parameter is sent; e.g. /?locale=de -->
        <!-- 国际化操作 拦截器 必需配置,可以和其它国际化方式通用 -->
        <!--<bean id="localeChangeInterceptor" class="org.springframework.web.servlet.i18n.LocaleChangeInterceptor"/>-->
        <!-- Saves a locale change using a cookie
        <bean id="localeResolver" class="org.springframework.web.servlet.i18n.CookieLocaleResolver" />-->
        <!--<mvc:interceptor>-->
            <!--<mvc:mapping path="/admin/**"/>-->
            <!--<bean class="com.sm.user.controller.AdminAuthorityInterceptor"/>-->
        <!--</mvc:interceptor>-->
        <!--<mvc:interceptor>-->
            <!--<mvc:mapping path="/mine"/>-->
            <!--<mvc:mapping path="/purchase/shoppingCart"/>-->
            <!--<mvc:mapping path="/purchase/preCreateOrder"/>-->
            <!--<mvc:mapping path="/purchase/createOrderSuccess"/>-->
            <!--<mvc:mapping path="/purchase/orderList"/>-->
            <!--<bean class="com.sm.user.controller.AuthorityInterceptor"/>-->
        <!--</mvc:interceptor>-->
        <!--<mvc:interceptor>-->
            <!--<mvc:mapping path="/contact/**"/>-->
            <!--<mvc:mapping path="/purchase/addToCart"/>-->
            <!--<mvc:mapping path="/purchase/createOrder"/>-->
            <!--<bean class="com.sm.user.controller.AuthorityInterceptorForAjax"/>-->
        <!--</mvc:interceptor>-->
    <!--</mvc:interceptors>-->

    <!-- Resolves view names to protected .jsp resources within the /WEB-INF/views directory
    <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <property name="viewClass" value="org.springframework.web.servlet.view.JstlView"/>
        <property name="prefix" value="/WEB-INF/views/"/>
        <property name="suffix" value=".jsp"/>
    </bean>-->

    <bean class="org.springframework.web.servlet.view.ContentNegotiatingViewResolver">
        <property name="order" value="1"/>
        <property name="contentNegotiationManager">
            <bean class="org.springframework.web.accept.ContentNegotiationManager">
                <constructor-arg>
                    <bean class="org.springframework.web.accept.PathExtensionContentNegotiationStrategy">
                        <constructor-arg>
                            <map>
                                <entry key="json" value="application/json"/>
                                <entry key="xml" value="application/xml"/>
                            </map>
                        </constructor-arg>
                    </bean>
                </constructor-arg>
            </bean>
        </property>
        <property name="defaultViews">
            <list>
                <!--  不知道这个和 MappingJacksonJsonView 的区别
                <bean class="org.springframework.web.servlet.view.json.MappingJackson2JsonView"/>
                -->
                <!-- JSON View  extractValueFromSingleKeyModel  可以设置是否包含对象名或者只需要对象的属性 -->
                <bean class="org.springframework.web.servlet.view.json.MappingJackson2JsonView"/>
                <!-- XML View -->
                <bean class="org.springframework.web.servlet.view.xml.MarshallingView">
                    <constructor-arg>
                        <!--
                            jaxb vs xStream : http://www.blogjava.net/ldd600/archive/2009/03/04/257832.html
                        -->
                        <bean class="org.springframework.oxm.jaxb.Jaxb2Marshaller">
                            <property name="packagesToScan">
                                <list>
                                    <value>com.sm</value>
                                </list>
                            </property>
                        </bean>

                        <!-- xml视图，XStreamMarshaller，可以转换任何形式的java对象
                        <bean name="xStreamMarshallingView" class="org.springframework.web.servlet.view.xml.MarshallingView">
                            <property name="marshaller">
                                <bean class="org.springframework.oxm.xstream.XStreamMarshaller">
                                      为了初始化XStreamMarshaller，这个类会把我们接口中得到结果以XML文档形式展现出来
                                    <property name="autodetectAnnotations" value="true"/>
                                </bean>
                            </property>
                        </bean>
                         -->

                    </constructor-arg>
                </bean>
            </list>
        </property>
    </bean>
    <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <property name="viewClass" value="org.springframework.web.servlet.view.JstlView"/>
        <property name="prefix" value="/WEB-INF/views/"/>
        <property name="suffix" value=".jsp"/>
    </bean>


    <!-- 对静态资源文件的访问  方案一 （二选一）
    <mvc:default-servlet-handler/>  -->

    <!-- 对静态资源文件的访问  方案二 （二选一）
    <mvc:resources mapping="/images/**" location="/images/" cache-period="31556926"/>
    <mvc:resources mapping="/js/**" location="/js/" cache-period="31556926"/>
    <mvc:resources mapping="/resource/**" location="/resource/" cache-period="31556926"/>
    -->

    <bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
        <property name="defaultEncoding" value="utf-8"/>
    </bean>

    <!-- Forwards requests to the "/" resource to the "welcome" view
     this will not go into controller
     只能访问资源, 不进入controller
     -->
    <!--<mvc:view-controller path="/" view-name="index"/>-->

</beans>
